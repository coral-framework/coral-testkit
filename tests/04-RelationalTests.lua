function isLesserThan()
	EXPECT_LT( 2, 2.1 )
	ASSERT_LT( "a", "b" )
	EXPECT_FATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: "c" < "b", which is false', function()
		ASSERT_LT( "c", "b" )
	end )
	EXPECT_FATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: "a" < "a", which is false', function()
		ASSERT_LT( "a", "a" )
	end )
	EXPECT_FATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: 3 < 2, which is false', function()
		ASSERT_LT( 3, 2 )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: "c" < "b", which is false', function()
		EXPECT_LT( "c", "b" )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: 3 < 2, which is false', function()
		EXPECT_LT( 3, 2 )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)attempt to compare two boolean values', function()
		EXPECT_LT( true, true )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)attempt to compare two table values', function()
		EXPECT_LT( {}, {} )
	end )
end

function isLesserOrEqual()
	EXPECT_LE( 2, 2.1 )
	EXPECT_LE( 2.1, 2.1 )
	ASSERT_LE( "a", "b" )
	ASSERT_LE( "a", "a" )
	EXPECT_FATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: "c" <= "b", which is false', function()
		ASSERT_LE( "c", "b" )
	end )
	EXPECT_FATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: 3 <= 2, which is false', function()
		ASSERT_LE( 3, 2 )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: "c" <= "b", which is false', function()
		EXPECT_LE( "c", "b" )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: 3 <= 2, which is false', function()
		EXPECT_LE( 3, 2 )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)attempt to compare two boolean values', function()
		EXPECT_LE( true, true )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)attempt to compare two table values', function()
		EXPECT_LE( {}, {} )
	end )
end

function isGreaterThan()
	EXPECT_GT( 2.1, 2 )
	ASSERT_GT( "b", "a" )
	EXPECT_FATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: "b" > "c", which is false', function()
		ASSERT_GT( "b", "c" )
	end )
	EXPECT_FATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: "a" > "a", which is false', function()
		ASSERT_GT( "a", "a" )
	end )
	EXPECT_FATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: 2 > 3, which is false', function()
		ASSERT_GT( 2, 3 )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: "b" > "c", which is false', function()
		EXPECT_GT( "b", "c" )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: 2 > 3, which is false', function()
		EXPECT_GT( 2, 3 )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)attempt to compare two boolean values', function()
		EXPECT_GT( true, true )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)attempt to compare two table values', function()
		EXPECT_GT( {}, {} )
	end )
end

function isGreaterOrEqual()
	EXPECT_GE( 2.1, 2 )
	EXPECT_GE( 2.1, 2.1 )
	ASSERT_GE( "b", "a" )
	ASSERT_GE( "a", "a" )
	EXPECT_FATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: "b" >= "c", which is false', function()
		ASSERT_GE( "b", "c" )
	end )
	EXPECT_FATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: 2 >= 3, which is false', function()
		ASSERT_GE( 2, 3 )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: "b" >= "c", which is false', function()
		EXPECT_GE( "b", "c" )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)Expected: 2 >= 3, which is false', function()
		EXPECT_GE( 2, 3 )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)attempt to compare two boolean values', function()
		EXPECT_GE( true, true )
	end )
	EXPECT_NONFATAL_FAILURE( 'RelationalTests%.lua(.+)attempt to compare two table values', function()
		EXPECT_GE( {}, {} )
	end )
end
