function isDoubleEqual()
	-- average number
	EXPECT_DOUBLE_EQ( 3.1234567891, 3.1234567892 )
	ASSERT_DOUBLE_EQ( 3.1234567891, 3.1234567892 )
	EXPECT_FATAL_FAILURE( "NumericTests%.lua", function()
		ASSERT_DOUBLE_EQ( 3.123456781, 3.123456782 )
	end )
	EXPECT_NONFATAL_FAILURE( "NumericTests%.lua", function()
		EXPECT_DOUBLE_EQ( 3.123456781, 3.123456782 )
	end )

	-- insanely large number
	EXPECT_DOUBLE_EQ( 9999999999.123451, 9999999999.123452 )
	ASSERT_DOUBLE_EQ( 9999999999.123451, 9999999999.123452 )
	EXPECT_FATAL_FAILURE( "NumericTests%.lua", function()
		ASSERT_DOUBLE_EQ( 9999999999.12341, 9999999999.12342 )
	end )
	EXPECT_NONFATAL_FAILURE( "NumericTests%.lua", function()
		EXPECT_DOUBLE_EQ( 9999999999.12341, 9999999999.12342 )
	end )

	-- insanely small number
	EXPECT_DOUBLE_EQ( 0.0000000001234567891, 0.0000000001234567892 )
	ASSERT_DOUBLE_EQ( 0.0000000001234567891, 0.0000000001234567892 )
	EXPECT_FATAL_FAILURE( "NumericTests%.lua", function()
		ASSERT_DOUBLE_EQ( 0.000000000123456781, 0.000000000123456782 )
	end )
	EXPECT_NONFATAL_FAILURE( "NumericTests%.lua", function()
		EXPECT_DOUBLE_EQ( 0.000000000123456781, 0.000000000123456782 )
	end )
end

function isNear()
	EXPECT_NEAR( 3.144444444444441, 3.144444444444442, 0.00000000000001 )
	ASSERT_NEAR( 3.144444444444441, 3.144444444444442, 0.00000000000001 )
	EXPECT_FATAL_FAILURE( "NumericTests%.lua", function()
		ASSERT_NEAR( 3.144444444444441, 3.144444444444442, 0.000000000000001 )
	end )
	EXPECT_NONFATAL_FAILURE( "NumericTests%.lua", function()
		EXPECT_NEAR( 3.144444444444441, 3.144444444444442, 0.000000000000001 )
	end )
end
